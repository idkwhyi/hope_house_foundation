// src/app/about/[projectSlug]/page.tsx
import { notFound } from "next/navigation";
import Image from "next/image";
import { projectContents } from "@/data/projectContents";
import { parseMarkdownToHtml, isValidMarkdown } from "@/utils/markdownParser";

// Generate static params untuk routing build-time
export async function generateStaticParams() {
  return Object.keys(projectContents).map((projectSlug) => ({
    projectSlug,
  }));
}

// Metadata dinamis
export async function generateMetadata({
  params,
}: {
  params: { projectSlug: string };
}) {
  const project = projectContents[params.projectSlug];

  if (!project) {
    return {
      title: "Proyek Tidak Ditemukan",
      description: "Proyek yang Anda cari tidak tersedia",
    };
  }

  return {
    title: `${project.title}`,
    description: project.summary,
  };
}

export default function page({
  params,
}: {
  params: { projectSlug: string };
}) {
  // Ambil proyek berdasarkan slug
  const project = projectContents[params.projectSlug];

  // Tangani kasus ketika proyek tidak ditemukan
  if (!project) {
    notFound();
  }

  // Komponen gambar khusus untuk menangani gambar lokal dan eksternal
  const CustomImageComponent = ({
    src,
    alt,
    ...props
  }: {
    src: string;
    alt: string;
  }) => {
    // Periksa apakah gambar adalah URL eksternal
    const isExternal = src.startsWith("http");

    if (isExternal) {
      return (
        <img
          src={src}
          alt={alt}
          width={800}
          height={600}
          {...props}
          className="max-w-full h-auto my-4 rounded-lg"
        />
      );
    }

    return (
      <div className="relative w-full aspect-video my-4">
        <Image
          src={src}
          alt={alt}
          fill
          className="object-contain rounded-lg"
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
        />
      </div>
    );
  };

  return (
    <div className="container mx-auto px-4 py-8 max-w-4xl">
      {/* Gambar Hook */}
      {project.hookImage && (
        <div className="relative w-full h-[400px] mb-8">
          <Image
            src={project.hookImage}
            alt={project.title}
            fill
            priority
            className="object-cover rounded-lg"
            sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
          />
        </div>
      )}

      {/* Judul Proyek */}
      <h1 className="text-4xl font-bold mb-6">{project.title}</h1>

      {/* Konten Proyek */}
      {/* <article className="prose lg:prose-xl">
        <ReactMarkdown
          components={{
            img: CustomImageComponent,
          }}
        >
          {project.content}
        </ReactMarkdown>
      </article> */}
      <article>
        {project.content}
      </article>

      {/* Galeri Gambar Konten (Opsional) */}
      {project.contentImages && project.contentImages.length > 0 && (
        <div className="mt-8">
          <h2 className="text-2xl font-semibold mb-4">Gambar Proyek</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
            {project.contentImages.map((imageSrc, index) => (
              <div key={index} className="relative w-full aspect-square">
                <Image
                  src={imageSrc}
                  alt={`Gambar Proyek ${index + 1}`}
                  fill
                  className="object-cover rounded-lg"
                  sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
                />
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}